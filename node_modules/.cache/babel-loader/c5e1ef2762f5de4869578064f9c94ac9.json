{"ast":null,"code":"var _jsxFileName = \"/Users/chelseawright/Coding_Projects/react_development/React/my-app/src/Slider2.js\";\nimport React, { useState } from 'react';\nimport cx from 'classnames';\nimport SliderContext from './components/NetflixSlider/context';\nimport Content from './components/NetflixSlider/Content';\nimport SlideButton from './components/NetflixSlider/SlideButton';\nimport SliderWrapper from './components/NetflixSlider/SliderWrapper';\nimport useSliding from './components/NetflixSlider/useSliding';\nimport useSizeElement from './components/NetflixSlider/useSizeElement';\nimport './componSlider.scss';\n\nconst Slider = ({\n  children,\n  activeSlide\n}) => {\n  const [currentSlide, setCurrentSlide] = useState(activeSlide);\n  const {\n    width,\n    elementRef\n  } = useSizeElement();\n  const {\n    handlePrev,\n    handleNext,\n    slideProps,\n    containerRef,\n    hasNext,\n    hasPrev\n  } = useSliding(width, React.Children.count(children));\n\n  const handleSelect = movie => {\n    setCurrentSlide(movie);\n  };\n\n  const handleClose = () => {\n    setCurrentSlide(null);\n  };\n\n  const contextValue = {\n    onSelectSlide: handleSelect,\n    onCloseSlide: handleClose,\n    elementRef,\n    currentSlide\n  };\n  return /*#__PURE__*/React.createElement(SliderContext.Provider, {\n    value: contextValue,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(SliderWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: cx('slider', {\n      'slider--open': currentSlide != null\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", Object.assign({\n    ref: containerRef,\n    className: \"slider__container\"\n  }, slideProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 11\n    }\n  }), children)), hasPrev && /*#__PURE__*/React.createElement(SlideButton, {\n    onClick: handlePrev,\n    type: \"prev\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 21\n    }\n  }), hasNext && /*#__PURE__*/React.createElement(SlideButton, {\n    onClick: handleNext,\n    type: \"next\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 21\n    }\n  })), currentSlide && /*#__PURE__*/React.createElement(Content, {\n    movie: currentSlide,\n    onClose: handleClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 24\n    }\n  }));\n};\n\nexport default Slider;","map":{"version":3,"sources":["/Users/chelseawright/Coding_Projects/react_development/React/my-app/src/Slider2.js"],"names":["React","useState","cx","SliderContext","Content","SlideButton","SliderWrapper","useSliding","useSizeElement","Slider","children","activeSlide","currentSlide","setCurrentSlide","width","elementRef","handlePrev","handleNext","slideProps","containerRef","hasNext","hasPrev","Children","count","handleSelect","movie","handleClose","contextValue","onSelectSlide","onCloseSlide"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,EAAP,MAAe,YAAf;AACA,OAAOC,aAAP,MAA0B,oCAA1B;AACA,OAAOC,OAAP,MAAoB,oCAApB;AACA,OAAOC,WAAP,MAAwB,wCAAxB;AACA,OAAOC,aAAP,MAA0B,0CAA1B;AACA,OAAOC,UAAP,MAAuB,uCAAvB;AACA,OAAOC,cAAP,MAA2B,2CAA3B;AACA,OAAO,qBAAP;;AAEA,MAAMC,MAAM,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA;AAAZ,CAAD,KAA+B;AAC5C,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCZ,QAAQ,CAACU,WAAD,CAAhD;AACA,QAAM;AAAEG,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAAwBP,cAAc,EAA5C;AACA,QAAM;AACJQ,IAAAA,UADI;AAEJC,IAAAA,UAFI;AAGJC,IAAAA,UAHI;AAIJC,IAAAA,YAJI;AAKJC,IAAAA,OALI;AAMJC,IAAAA;AANI,MAOFd,UAAU,CAACO,KAAD,EAAQd,KAAK,CAACsB,QAAN,CAAeC,KAAf,CAAqBb,QAArB,CAAR,CAPd;;AASA,QAAMc,YAAY,GAAGC,KAAK,IAAI;AAC5BZ,IAAAA,eAAe,CAACY,KAAD,CAAf;AACD,GAFD;;AAIA,QAAMC,WAAW,GAAG,MAAM;AACxBb,IAAAA,eAAe,CAAC,IAAD,CAAf;AACD,GAFD;;AAIA,QAAMc,YAAY,GAAG;AACnBC,IAAAA,aAAa,EAAEJ,YADI;AAEnBK,IAAAA,YAAY,EAAEH,WAFK;AAGnBX,IAAAA,UAHmB;AAInBH,IAAAA;AAJmB,GAArB;AAOA,sBACE,oBAAC,aAAD,CAAe,QAAf;AAAwB,IAAA,KAAK,EAAEe,YAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,SAAS,EAAEzB,EAAE,CAAC,QAAD,EAAW;AAAE,sBAAgBU,YAAY,IAAI;AAAlC,KAAX,CADf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAGE;AAAK,IAAA,GAAG,EAAEO,YAAV;AAAwB,IAAA,SAAS,EAAC;AAAlC,KAA0DD,UAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAuER,QAAvE,CAHF,CADF,EAMGW,OAAO,iBAAI,oBAAC,WAAD;AAAa,IAAA,OAAO,EAAEL,UAAtB;AAAkC,IAAA,IAAI,EAAC,MAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANd,EAOGI,OAAO,iBAAI,oBAAC,WAAD;AAAa,IAAA,OAAO,EAAEH,UAAtB;AAAkC,IAAA,IAAI,EAAC,MAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPd,CADF,EAUGL,YAAY,iBAAI,oBAAC,OAAD;AAAS,IAAA,KAAK,EAAEA,YAAhB;AAA8B,IAAA,OAAO,EAAEc,WAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVnB,CADF;AAcD,CAzCD;;AA2CA,eAAejB,MAAf","sourcesContent":["import React, { useState } from 'react';\nimport cx from 'classnames';\nimport SliderContext from './components/NetflixSlider/context'\nimport Content from './components/NetflixSlider/Content'\nimport SlideButton from './components/NetflixSlider/SlideButton'\nimport SliderWrapper from './components/NetflixSlider/SliderWrapper'\nimport useSliding from './components/NetflixSlider/useSliding'\nimport useSizeElement from './components/NetflixSlider/useSizeElement'\nimport './componSlider.scss'\n\nconst Slider = ({ children, activeSlide }) => {\n  const [currentSlide, setCurrentSlide] = useState(activeSlide);\n  const { width, elementRef } = useSizeElement();\n  const {\n    handlePrev,\n    handleNext,\n    slideProps,\n    containerRef,\n    hasNext,\n    hasPrev\n  } = useSliding(width, React.Children.count(children));\n\n  const handleSelect = movie => {\n    setCurrentSlide(movie);\n  };\n\n  const handleClose = () => {\n    setCurrentSlide(null);\n  };\n\n  const contextValue = {\n    onSelectSlide: handleSelect,\n    onCloseSlide: handleClose,\n    elementRef,\n    currentSlide,\n  };\n\n  return (\n    <SliderContext.Provider value={contextValue}>\n      <SliderWrapper>\n        <div\n          className={cx('slider', { 'slider--open': currentSlide != null })}\n        >\n          <div ref={containerRef} className=\"slider__container\" {...slideProps}>{children}</div>\n        </div>\n        {hasPrev && <SlideButton onClick={handlePrev} type=\"prev\" />}\n        {hasNext && <SlideButton onClick={handleNext} type=\"next\" />}\n      </SliderWrapper>\n      {currentSlide && <Content movie={currentSlide} onClose={handleClose} />}\n    </SliderContext.Provider>\n  );\n};\n\nexport default Slider;"]},"metadata":{},"sourceType":"module"}